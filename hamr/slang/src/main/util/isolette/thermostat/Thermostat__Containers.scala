// #Sireum
package isolette.thermostat

import org.sireum._
import isolette._

import org.sireum._
import isolette._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun

// containers for the pre and post state values of ports and state variables

@sig trait Thermostat_PreState_Container extends art.DataContent {
  def api_lower_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_impl
  def api_upper_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_impl

  def api_current_tempWstatus: Isolette_Data_Model.TempWstatus_impl

  def api_lower_desired_tempWstatus: Isolette_Data_Model.TempWstatus_impl
  def api_upper_desired_tempWstatus: Isolette_Data_Model.TempWstatus_impl
}

// container for incoming ports
@datatype class Thermostat_PreState_Container_P (
  val api_lower_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_impl,
  val api_upper_alarm_tempWstatus: Isolette_Data_Model.TempWstatus_impl,

  val api_current_tempWstatus: Isolette_Data_Model.TempWstatus_impl,

  val api_lower_desired_tempWstatus: Isolette_Data_Model.TempWstatus_impl,
  val api_upper_desired_tempWstatus: Isolette_Data_Model.TempWstatus_impl) extends Thermostat_PreState_Container


@sig trait Thermostat_PostState_Container extends art.DataContent {

  def api_monitor_status: Isolette_Data_Model.Status.Type

  def api_alarm_control: Isolette_Data_Model.On_Off.Type

  def api_heat_control: Isolette_Data_Model.On_Off.Type

  def api_display_temp: Isolette_Data_Model.Temp_impl

  def api_regulator_status: Isolette_Data_Model.Status.Type
}

// container for outgoing ports
@datatype class Thermostat_PostState_Container_P (

  val api_monitor_status: Isolette_Data_Model.Status.Type,

  val api_alarm_control: Isolette_Data_Model.On_Off.Type,

  val api_heat_control: Isolette_Data_Model.On_Off.Type,

  val api_display_temp: Isolette_Data_Model.Temp_impl,

  val api_regulator_status: Isolette_Data_Model.Status.Type) extends Thermostat_PostState_Container
